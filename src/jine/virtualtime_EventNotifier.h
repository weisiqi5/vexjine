/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>

/* Header for class virtualtime_EventNotifier */

#ifndef _Included_virtualtime_EventNotifier
#define _Included_virtualtime_EventNotifier
#ifdef __cplusplus
extern "C" {
#endif
#undef virtualtime_EventNotifier_debug
#define virtualtime_EventNotifier_debug 0L
/*
 * Class:     virtualtime_EventNotifier
 * Method:    setInstrumentationDelays
 * Signature: (JJJ)V
 */
JNIEXPORT void JNICALL Java_virtualtime_EventNotifier_setInstrumentationDelays
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     virtualtime_EventNotifier
 * Method:    _registerMethod
 * Signature: (Ljava/lang/String;II)V
 */
JNIEXPORT void JNICALL Java_virtualtime_EventNotifier__1registerMethod
  (JNIEnv *, jclass, jstring, jint, jint);

/*
 * Class:     virtualtime_EventNotifier
 * Method:    _registerMethodVirtualTime
 * Signature: (ID)V
 */
JNIEXPORT void JNICALL Java_virtualtime_EventNotifier__1registerMethodVirtualTime
  (JNIEnv *, jclass, jint, jdouble);

/*
 * Class:     virtualtime_EventNotifier
 * Method:    _registerMethodPerformanceModel
 * Signature: (ILjava/lang/String;ILjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_virtualtime_EventNotifier__1registerMethodPerformanceModel
  (JNIEnv *, jclass, jint, jstring, jint, jstring);

/*
 * Class:     virtualtime_EventNotifier
 * Method:    _registerProfilingInvalidationPoilcy
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_virtualtime_EventNotifier__1registerProfilingInvalidationPoilcy
  (JNIEnv *, jclass, jstring);


JNIEXPORT void JNICALL Java_virtualtime_EventNotifier__1registerExcludedThreadName
  (JNIEnv *, jclass, jstring);

/*
 * Class:     virtualtime_EventNotifier
 * Method:    forcingNoWaitBecauseNotUsingScheduling
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_virtualtime_EventNotifier_forcingNoWaitBecauseNotUsingScheduling
  (JNIEnv *, jclass);

JNIEXPORT jboolean JNICALL Java_virtualtime_EventNotifier_notRelyingOnJvmtiForMonitorHandling
  (JNIEnv *, jclass);

/*
 * Class:     virtualtime_EventNotifier
 * Method:    getTimeBeforeCreatingThread
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_virtualtime_EventNotifier_getTimeBeforeCreatingThread
  (JNIEnv *, jclass, jlong);

/*
 * Class:     virtualtime_EventNotifier
 * Method:    getTimeAfterCreatingThread
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_virtualtime_EventNotifier_getTimeAfterCreatingThread
  (JNIEnv *, jclass);

/*
 * Class:     virtualtime_EventNotifier
 * Method:    logJoiningThread
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_virtualtime_EventNotifier_logJoiningThread
  (JNIEnv *, jclass, jlong);

/*
 * Class:     virtualtime_EventNotifier
 * Method:    _afterMethodEntry
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_virtualtime_EventNotifier__1afterMethodEntry
  (JNIEnv *, jclass, jint);

/*
 * Class:     virtualtime_EventNotifier
 * Method:    _beforeMethodExit
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_virtualtime_EventNotifier__1beforeMethodExit
  (JNIEnv *, jclass, jint);

/*
 * Class:     virtualtime_EventNotifier
 * Method:    _enterPerfModel
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_virtualtime_EventNotifier__1enterPerfModel
  (JNIEnv *, jclass, jint);

/*
 * Class:     virtualtime_EventNotifier
 * Method:    _exitPerfModel
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_virtualtime_EventNotifier__1exitPerfModel
  (JNIEnv *, jclass, jint);

/*
 * Class:     virtualtime_EventNotifier
 * Method:    _afterIoMethodEntry
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_virtualtime_EventNotifier__1afterIoMethodEntry
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     virtualtime_EventNotifier
 * Method:    _afterWritingIoMethodEntry
 * Signature: (IIII)V
 */
JNIEXPORT void JNICALL Java_virtualtime_EventNotifier__1afterWritingIoMethodEntry
  (JNIEnv *, jclass, jint, jint, jint, jint);

/*
 * Class:     virtualtime_EventNotifier
 * Method:    _beforeIoMethodExit
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_virtualtime_EventNotifier__1beforeIoMethodExit
  (JNIEnv *, jclass, jint);

/*
 * Class:     virtualtime_EventNotifier
 * Method:    _beforeSocketRead
 * Signature: (III)V
 */
JNIEXPORT void JNICALL Java_virtualtime_EventNotifier__1beforeSocketRead__III
  (JNIEnv *, jclass, jint, jint, jint);

/*
 * Class:     virtualtime_EventNotifier
 * Method:    _beforeSocketRead
 * Signature: (IIIII)V
 */
JNIEXPORT void JNICALL Java_virtualtime_EventNotifier__1beforeSocketRead__IIIII
  (JNIEnv *, jclass, jint, jint, jint, jint, jint);

/*
 * Class:     virtualtime_EventNotifier
 * Method:    _interactionPoint
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_virtualtime_EventNotifier__1interactionPoint
  (JNIEnv *, jclass);

/*
 * Class:     virtualtime_EventNotifier
 * Method:    _yield
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_virtualtime_EventNotifier__1yield
  (JNIEnv *, jclass);

/*
 * Class:     virtualtime_EventNotifier
 * Method:    beforeSocketAccept
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_virtualtime_EventNotifier_beforeSocketAccept
  (JNIEnv *, jclass);

/*
 * Class:     virtualtime_EventNotifier
 * Method:    afterSocketAccept
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_virtualtime_EventNotifier_afterSocketAccept
  (JNIEnv *, jclass);

/*
 * Class:     virtualtime_EventNotifier
 * Method:    _beforeEpollWaitingOn
 * Signature: (IJ)Z
 */
JNIEXPORT jboolean JNICALL Java_virtualtime_EventNotifier__1beforeEpollWaitingOn
  (JNIEnv *, jclass, jint, jlong);

/*
 * Class:     virtualtime_EventNotifier
 * Method:    afterEpollWaiting
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_virtualtime_EventNotifier_afterEpollWaiting
  (JNIEnv *, jclass);

/*
 * Class:     virtualtime_EventNotifier
 * Method:    _beforeInterruptingFd
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_virtualtime_EventNotifier__1beforeInterruptingFd
  (JNIEnv *, jclass, jint);

/*
 * Class:     virtualtime_EventNotifier
 * Method:    park
 * Signature: (ZJ)V
 */
JNIEXPORT void JNICALL Java_virtualtime_EventNotifier_park
  (JNIEnv *, jclass, jboolean, jlong);

/*
 * Class:     virtualtime_EventNotifier
 * Method:    parked
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_virtualtime_EventNotifier_parked
  (JNIEnv *, jclass);

/*
 * Class:     virtualtime_EventNotifier
 * Method:    unpark
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_virtualtime_EventNotifier_unpark
  (JNIEnv *, jclass, jlong);

/*
 * Class:     virtualtime_EventNotifier
 * Method:    _waitInVirtualTime
 * Signature: (Ljava/lang/Object;IJJI)Z
 */
JNIEXPORT jboolean JNICALL Java_virtualtime_EventNotifier__1waitInVirtualTime
  (JNIEnv *, jclass, jobject, jint, jlong, jlong, jint);

/*
 * Class:     virtualtime_EventNotifier
 * Method:    _waitInVirtualTimeWithoutJvmti
 * Signature: (Ljava/lang/Object;IJJIZ)Z
 */
JNIEXPORT jboolean JNICALL Java_virtualtime_EventNotifier__1waitInVirtualTimeWithoutJvmti
  (JNIEnv *, jclass, jobject, jint, jlong, jlong, jint, jboolean);

/*
 * Class:     virtualtime_EventNotifier
 * Method:    _notifyTimedWaitingThreads
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_virtualtime_EventNotifier__1notifyTimedWaitingThreads
  (JNIEnv *, jclass, jint);

/*
 * Class:     virtualtime_EventNotifier
 * Method:    _notifyAllTimedWaitingThreads
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_virtualtime_EventNotifier__1notifyAllTimedWaitingThreads
  (JNIEnv *, jclass, jint);

/*
 * Class:     virtualtime_EventNotifier
 * Method:    _beforeThreadInterrupt
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_virtualtime_EventNotifier__1beforeThreadInterrupt
  (JNIEnv *, jclass, jlong);

/*
 * Class:     virtualtime_EventNotifier
 * Method:    _beforeAcquiringMonitor
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_virtualtime_EventNotifier__1beforeAcquiringMonitor
  (JNIEnv *, jclass, jint);

/*
 * Class:     virtualtime_EventNotifier
 * Method:    _beforeReleasingMonitor
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_virtualtime_EventNotifier__1beforeReleasingMonitor
  (JNIEnv *, jclass, jint);

/*
 * Class:     virtualtime_EventNotifier
 * Method:    resetPerformanceMeasures
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_virtualtime_EventNotifier_resetPerformanceMeasures
  (JNIEnv *, jclass);

/*
 * Class:     virtualtime_EventNotifier
 * Method:    writePerformanceMeasures
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_virtualtime_EventNotifier_writePerformanceMeasures
  (JNIEnv *, jclass, jstring);

/*
 * Class:     virtualtime_EventNotifier
 * Method:    onInstrumentationStart
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_virtualtime_EventNotifier_onInstrumentationStart
  (JNIEnv *, jclass);

/*
 * Class:     virtualtime_EventNotifier
 * Method:    onInstrumentationEnd
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_virtualtime_EventNotifier_onInstrumentationEnd
  (JNIEnv *, jclass);


/*
 * Class:     virtualtime_EventNotifier
 * Method:    _getPapiCpuTime
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_virtualtime_EventNotifier__1getPapiCpuTime
  (JNIEnv *, jclass);

/*
 * Class:     virtualtime_EventNotifier
 * Method:    _getPapiRealTime
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_virtualtime_EventNotifier__1getPapiRealTime
  (JNIEnv *, jclass);

/*
 * Class:     virtualtime_EventNotifier
 * Method:    _getVtfTime
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_virtualtime_EventNotifier__1getVtfTime
  (JNIEnv *, jclass);

/*
 * Class:     virtualtime_EventNotifier
 * Method:    _getVtfTimeInMillis
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_virtualtime_EventNotifier__1getVtfTimeInMillis
  (JNIEnv *, jclass);

/*
 * Class:     virtualtime_EventNotifier
 * Method:    _simulateIoDuration
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_virtualtime_EventNotifier__1simulateIoDuration
  (JNIEnv *, jclass, jint);

/*
 * Class:     virtualtime_EventNotifier
 * Method:    _shouldMainIterationContinue
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_virtualtime_EventNotifier__1shouldMainIterationContinue
  (JNIEnv *, jclass);

/*
 * Class:     virtualtime_EventNotifier
 * Method:    _exportAndProcessMainIterationResults
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_virtualtime_EventNotifier__1exportAndProcessMainIterationResults
  (JNIEnv *, jclass);

#ifdef __cplusplus
}
#endif
#endif
